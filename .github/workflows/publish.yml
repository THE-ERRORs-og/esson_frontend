name: Generate a build and push to another branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Install all dependencies
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run build # The build command of your project

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: dist # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message



# name: Generate a build and push to another branch

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: Build and Push

#     steps:
#       # Step 1: Checkout the code from the main branch
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       # Step 2: Remove existing node_modules and package-lock.json
#       - name: Clean up node_modules and package-lock
#         run: |
#           rm -rf node_modules
#           rm -f package-lock.json

#       # Step 3: Install all dependencies without optional ones using npm ci
#       - name: Install dependencies
#         run: npm ci --no-optional

#       # Step 4: Build the project
#       - name: Build project
#         run: npm run build

#       # Step 5: Push the build directory to the "build" branch
#       - name: Push build to another branch
#         uses: s0/git-publish-subdir-action@develop
#         env:
#           REPO: self
#           BRANCH: build            # The branch where the build will be pushed
#           FOLDER: dist             # The folder containing the build output
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           MESSAGE: "Build: ({sha}) {msg}" # Custom commit message
